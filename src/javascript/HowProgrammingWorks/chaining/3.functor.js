/* Из замыкания возвращаем объект, в котором будет лежать ф-ция
  Функции `line`, `toString` будут замкнуты на аргумент `s`
 */

const text = (s = "") => ({
  line: (a) => text(s + "\n" + a),
  toString: () => s,
});

/*
  В отличие от объектного способа вызова, каждый новый вызов `.line()` будет возвращать новый экземпляр замыкания.
  Это будет новый объект, замкнутый на новый контекст ф-ции из-за рекурсии.
 */
const txt = text("line1").line("line2").line("line3");

/*
В данном способе создаётся много инстансов объекта, но это нам позволяет сделать разветвление
 */

const txt2 = text("line1");
const a = txt2.line("add new");
const b = txt2.line("else");
const c = b.line("something");

console.log(c.line("test") + "");
